plugins {
	id 'org.springframework.boot' version '2.6.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	 id "org.sonarqube" version "3.3"
	 id "jacoco"
}

group = 'com.bms'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
testImplementation('junit:junit:4.13')
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation group: 'org.hibernate', name: 'hibernate-validator', version: '8.0.0.Alpha2'
    implementation("org.springdoc:springdoc-openapi-ui:1.4.6")
	
}

jacocoTestReport{
    additionalSourceDirs.from = files(sourceSets.main.allJava.srcDirs)
    reports {
        html.enabled true
        xml.enabled false
        csv.enabled false
        html.destination file("build/reports/jacoco/html")
    }
    executionData.from = files('build/jacoco/test.exec')    
}
tasks.named('test') {
	useJUnitPlatform()
}

def sonarqubeURL = "http://localhost:9000"
sonarqube {
    properties {
        property 'sonar.projectKey', 'bms'
        property "sonar.language","java"
       property "sonar.java.coveragePlugin","jacoco"
     
       property "sonar.inclusions","/src/main/**/*.java"
      
       
    }
}
 
project.tasks["sonarqube"].dependsOn 'test'
